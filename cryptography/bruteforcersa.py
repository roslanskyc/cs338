import math

def encode(str, exp, mod):
    asci = []
    for x in str:
        asci.append(ord(x))
    
    code = []
    for x in asci:
        code.append((x**exp) % mod)
    return code

def decode(code, exp, mod):
    str = []
    for x in code:
        str.append(chr((x**exp) % mod))
    return str
    
def findPrimeFactors(product):
    for i in range(2, product):
        if product % i == 0:
            return i, product // i
    return 0, 0

def bruteForceTheBIGD(e, lcm):
    THEBIGD = 1
    while((THEBIGD*e) % lcm != 1):
        THEBIGD += 1
    return THEBIGD


# def bruteforce(integer):

str = ['H', 'i', '!']
exp = 65537
mod = 4130451262211114465399144467783146491178606473613867919547867170437871792069749373814709982373845013325191299385300986583682919148064273279155952873888132580048439218811094727949504186398803581521726218891794582222639351190347182722741617694574436111005641822106919956657149613473143302422640883729817761147488020247435175349119824917867078696845781610353884763759406215834631368684493341187621142769639421823763169579658559539747019297361910955858075769799167608994557677405579187519233470167886063771425775106436625399425703250419180596675280017565656105566469181305946078308444004709907196904677233081105616122162725110915401121362832490632240328117751515252157112049963724346178287667757044889905749171670322756168351713612103757250965412531821655191982799298863451075297015619300875795384192569506063601944435503410263891952250964615194765283612844176797535728768484448922057988301015338050458636629628478202154896320501
#print(encode(str,exp,mod))

pexp = 561109107640959337251454646942541666706793619399488320913906059453566268898438724309510093124103058633049699229859997918039108124803030730798258211944795220412457914843144732943748352404115969395729565387394100516168853375156949017815411482594506991413754507258768457117637411061711625821578219751385744350459829474387221968250206772415133461068068322886013031596655225896451211916902577423339350810658098059065314231162551773538119120564156022399628432465965625321079258525058416451100603173494099279058194276826304754088239610731925093923447511028664436885944224739743546864739487048236784264924229194271277782213816253641532583010577210233263839670102073951106048687242799831494047958313146545917709874188325873843758002437099358898914780413149152787918094024878060603274805138329651871203513868032307020892276001294910649100632550077225539680706185147602236910072760443859965703073827031532871482536738959054059246653621
code = [4086205818233596914161740451480919236531681501167879340899683392105103096783784441485268829452246425654368255109644610973190002905821677862677059210942317059889089008504916329163733225808725876546533563149999356141107387326304434088635082490741702532216867532713966719160754825407916988574824020237236989495513716727743277057198670771249763544333982380491641923063030698160996119662559663233301396156620196236965746477165569429093764889987958899175603541746129141925905098216257197104236301142279631196575616627398453127131619854563832937151299516388431238725008195224509353019635960376306072961142111697067626990424779586867576717049928764429113595432257361048220418967342159337365184502707611441721201050542126990286878372442345452171797319627511891210368925194921802629199122427479621664945133176667380162001383837757146899092738266751050577455078043449474278906182786277409993674615386882130307241986031260245654964904477, 3087380956545397409439801636237066130110105798415941156055885745333581709109943880927455618250947146087559246406543061890622862346942459924564146552342069834935250347466335682256594465147809762142946176030159744286853419067658943377375414057526196940026271651128761974331997071655668287914093045208911519914341392670178271698153190082134793300303009541935609448138001767725388779415716945313144194517769063396026725466894332224226743454679192871088742711789967047778625361411309143056136922977275573403960248009159856271202868414421305721520451717748246918210830389676683437883175091866620401241277848306777087316514115339630956055075577747566034653472942838338810626465252193370960511180171188459526369242886401894767049915603444899424499840258491719786960972919396771369465873159632499296987479504118137936674134666517057280461005414891235367096357560862237495934622217339707664642677365393170944001557869018007797652945596, 196043604945729117213274873108354119806976640852873308502840415963990370789231022868509130050684043083607598599014248577718264602289713363825287107447684240125210934423819145076506130047036418273659447471152464393340414567318963204553237624500327527474037446146140386287220165328862763546477717061623400547004120879661010369586656052865754773018260150070456402809788474716209893278443849486507030084263305362255626318988630459584510612359686815543325481326885452510699762608728418186216335216193954954722010076709320236401272159694469578061830044573032199972572467573493704624639333859927525168820546752907924483007732243138050475199687567525000733862876809161194065197930953153827883512720239697150871022088821476532966733722616597000275327215460743185526094581854014687433862099813132710827868218585853931454722747852168008860407161672576419814283721802284088701933443536249448523653861991316751313004232120620668177237875]
#print(decode(code, pexp, mod))

lcm = math.lcm(0x00d04ece28b891c31c8d83f12522baff3e5d3cee556883e399b1885cd1d4371abe1633121a2e1dae5f6150a6f1b410c5cac9caff6fd48a3d6bddf6d772ac27e0bec6610fa2c335dba0d63468e559dad34638cb996104b7dc88c7371d256590127a990b3e50ad0ecdf98641a95abb4dcf2c53c62574225b4486f0140bf69d64836b3556a2d3b6f5b4ddae12e08a80f84430ad1e14b5e6ef74b7c1fdf940c68bc052e8bee81f9bd5ecb9d19664536161ea0bc4682ee7ec7bfdbc67000212d325025a,
    0x00dfadd0e19b57fbc7603624c8b840b8fbea4ab13c92f410092639b24c45c8395d5b44d1c1e0869ad63e1dc05624ca990f7a24249c86a5864cd11f7fa5e3336101f3a628c1b40520d12f536c2ff745411257551c146aeb8b2dc67e3e8313d160edc9eafbf1cc786a08cff5baa94d4694b559c48b160645aad83d6b2177c3ada6bc45446dcdc852faa39a9ec9dc17f2e5429e334b3af5b2b23fb9a49463d2f2dd1de2278f3e203578ab19c5e2140f26347d5e942264ec3dd4c0ebfa5f054aa02fee)
num1 = 0x18b9a9a7ec42cb4113e9e0a9c5f05067f4e3df0620688a4830450aa4375aee0dea8820a1d28797dad9c5c5f7bfc8bcafb3b3565744b22db89366ccd8f659326c067a2c68c1fc468c76b5d2c65800a76755f0f30b4033060c8da6d714f93f4c1fd556f9f0d2986741a2b43b7f8e31ed827b44b7dced3b9a0eacddba3be3c9571db94865f41920c3072532e28d53a5a3c01f13fd3a36117ccc816458206558da52d537dcc54c30efd19f8bea224c69e206b6d5588c651b62183ef2ccc41ab6dd9123ae40c2bf41e7af7e12c873fb0fdf477c3f666d325ceddeac809e3e98c7612573da7ee9f3f367003187bfdd926875d83ce99d5e7a226d617bc4b9fee697f13160dd0cf09f4572ce30a11d5ae1d682cd7360dca139ab3060401c6335a88fc96c36921f75a3cdab423771209ddc48b459274d3557b7edfab644eea3b8fea17216bb3ee636727b231548110ce7ef4a4d94ba2269dabeb8b2ae929fead1db562820f794b6bc668b33d445035f809fd5901b21be386c9e117a3d2d2e1d9e111310b5
num2 = 0x010001
print((num1 * num2) % lcm)
'''
e = 13

# de mod(lstm) = 1
p, q = findPrimeFactors(5561) # = 67, 83

lcm = math.lcm(p-1, q-1)

print(lcm)
THEBIGD = bruteForceTheBIGD(e, lcm)
print(THEBIGD)

code = [1516, 3860, 2891, 570, 3483, 4022, 3437, 299,
 570, 843, 3433, 5450, 653, 570, 3860, 482,
 3860, 4851, 570, 2187, 4022, 3075, 653, 3860,
 570, 3433, 1511, 2442, 4851, 570, 2187, 3860,
 570, 3433, 1511, 4022, 3411, 5139, 1511, 3433,
 4180, 570, 4169, 4022, 3411, 3075, 570, 3000,
 2442, 2458, 4759, 570, 2863, 2458, 3455, 1106,
 3860, 299, 570, 1511, 3433, 3433, 3000, 653,
 3269, 4951, 4951, 2187, 2187, 2187, 299, 653,
 1106, 1511, 4851, 3860, 3455, 3860, 3075, 299,
 1106, 4022, 3194, 4951, 3437, 2458, 4022, 5139,
 4951, 2442, 3075, 1106, 1511, 3455, 482, 3860,
 653, 4951, 2875, 3668, 2875, 2875, 4951, 3668,
 4063, 4951, 2442, 3455, 3075, 3433, 2442, 5139,
 653, 5077, 2442, 3075, 3860, 5077, 3411, 653,
 3860, 1165, 5077, 2713, 4022, 3075, 5077, 653,
 3433, 2442, 2458, 3409, 3455, 4851, 5139, 5077,
 2713, 2442, 3075, 5077, 3194, 4022, 3075, 3860,
 5077, 3433, 1511, 2442, 4851, 5077, 3000, 3075,
 3860, 482, 3455, 4022, 3411, 653, 2458, 2891,
 5077, 3075, 3860, 3000, 4022, 3075, 3433, 3860,
 1165, 299, 1511, 3433, 3194, 2458]

out_text = "".join(decode(code, THEBIGD, 5561))
print(out_text)'''